<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="test_robot" >
    
    <xacro:arg name="namespace" default=""/>
    
    <xacro:property name="body_len" value="0.3"/>
    <xacro:property name="body_width" value="0.2"/>
    <xacro:property name="body_height" value="0.1"/>
    <xacro:property name="wheel_radius" value="0.05"/>
    <xacro:property name="wheel_width" value="0.01"/>
    <xacro:property name="camera_size" value="0.02"/>
    
    
    <link name="base_link" />
    
    <joint name="zero_joint" type="fixed">
        <parent link="base_link"/>
        <child link="body_link"/>
        <origin xyz="-0.1 0 ${wheel_radius}" rpy="0 0 0"/>
    </joint>
    
    <link name="body_link">
        <visual>
            <geometry>
                <box size="${body_len} ${body_width} ${body_height}" />
            </geometry>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <material name="blue">
                <color rgba="0 0 .8 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${body_len} ${body_width} ${body_height}" />
            </geometry>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
        </collision>
        <inertial>
            <mass value="3"/>
            <inertia ixx="1e-4" ixy="0.0" ixz="0.0" iyy="1e-4" iyz="0.0" izz="1e-4"/>
        </inertial>
    </link>
    
    <xacro:macro name="wheel" params="name dx dy">
        <link name="${name}_link">
            <visual>
                <geometry>
                    <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
                </geometry>
                <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
                <material name="black">
                    <color rgba="0 0 0 1"/>
                </material>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
                </geometry>
                <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
            </collision>
            <inertial>
                <mass value="0.1"/>
                <inertia izz="1e-5" ixy="0.0" ixz="0.0" ixx="1e-5" iyz="0.0" iyy="1e-5"/>
            </inertial>
        </link>
        <joint name="${name}_j" type="continuous">
            <origin xyz="${dx} ${dy} 0" rpy="0 0 0"/>
            <parent link="body_link"/>
            <axis xyz="0 1 0"/>
            <child link="${name}_link"/>
        </joint>
        <transmission name="${name}_tr">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${name}_j">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${name}_m">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>
    
    <xacro:wheel name="lwheel" dx="0.1" dy="0.12"  />
    <xacro:wheel name="rwheel" dx="0.1" dy="-0.12"  />
    
    <link name="caster_link">
        <visual>
            <geometry>
                <sphere radius="0.02"/>
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <sphere radius="0.02"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.05"/>
            <inertia izz="1e-5" ixy="0.0" ixz="0.0" ixx="1e-5" iyz="0.0" iyy="1e-5"/>
        </inertial>
    </link>  
    
    <joint name="caster_j" type="fixed">
        <origin xyz="-0.1 0 -0.03" rpy="0 0 0"/>
        <parent link="body_link"/>
        <child link="caster_link"/>
    </joint>
    
    <gazebo reference="caster_link">
        <mu1>0.01</mu1>
        <mu2>0.01</mu2>
    </gazebo>
    
    <link name="camera_box">
        <visual>
            <geometry>
                <box size="${camera_size} ${camera_size} ${camera_size}" />
            </geometry>
            <origin xyz="0 0 ${camera_size/2}" rpy="0 0 0"/>
            <material name="blue">
                <color rgba="0 0 .8 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${camera_size} ${camera_size} ${camera_size}" />
            </geometry>
            <origin xyz="0 0 ${camera_size/2 + 0.01}" rpy="0 0 0"/>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
        </inertial>
    </link>
    
    <link name="camera_optical_box">
        <visual>
            <geometry>
                <box size="0 0 0" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <material name="blue">
                <color rgba="0 0 .8 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0 0 0" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </collision>
        <inertial>
            <mass value="0."/>
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
        </inertial>
    </link>
    
    <joint name="camera_optical_j" type="fixed">
        <origin xyz="0 0 0" rpy="-${pi/2} 0 -${pi/2}"/>
        <parent link="camera_box"/>
        <axis xyz="0 0 0"/>
        <child link="camera_optical_box"/>
    </joint>
    
    <link name="camera_box_tiny">
        <visual>
            <geometry>
                <box size="${camera_size/3} ${camera_size/5} ${camera_size/5}" />
            </geometry>
            <origin xyz="${camera_size/5} 0 ${camera_size/10}" rpy="0 0 0"/>
            <material name="blue">
                <color rgba="0 0 .8 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${camera_size/3} ${camera_size/5} ${camera_size/5}" />
            </geometry>
            <origin xyz="${camera_size/5} 0 ${camera_size/10}" rpy="0 0 0"/>
        </collision>
        <inertial>
            <mass value="0.01"/>
            <inertia ixx="1e-8" ixy="0.0" ixz="0.0" iyy="1e-8" iyz="0.0" izz="1e-8"/>
        </inertial>
    </link>
    
    <joint name="camera_joint" type="revolute"> <!-- arctic: type="continuous" -->
        <limit lower="${-pi/2}" upper="${pi/2}" effort="1" velocity="1"/>
        <origin xyz="${body_width/2} 0 ${body_height}" rpy="0 0 0"/>
        <parent link="body_link"/>
        <axis xyz="0 0 1"/>
        <child link="camera_box"/>
        <!-- arctic: -->
        <!-- <dynamics damping="${wheel_friction}"/> -->
    </joint>
    
    <joint name="camera_joint_tiny" type="fixed">
        <origin xyz="${camera_size/2} 0 ${camera_size/10}" rpy="0 0 0"/>
        <parent link="camera_box"/>
        <child link="camera_box_tiny"/>
        <!-- arctic: -->
        <!-- <dynamics damping="${wheel_friction}"/> -->
    </joint>
    
    <transmission name="camera_tr">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="camera_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="camera_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>


  <gazebo reference="camera_box">
    <material>Gazebo/Black</material>
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <!--<frameName>camera_link1</frameName>-->
        <frameName>camera_optical_box</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


    
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>$(arg namespace)</robotNamespace>
            <!--<robotNamespace>/</robotNamespace>-->
        </plugin>
    </gazebo>
    
</robot>
